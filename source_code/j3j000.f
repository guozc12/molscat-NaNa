      SUBROUTINE J3J000(J2,J3,IVAL,W3J,J1MIN)
C  This subroutine is part of the MOLSCAT, BOUND and FIELD suite of programs
C
C  THIS SUBROUTINE CALCULATES A SEQUENCE OF 3-J SYMBOLS FOR FIXED J2,
C  J3, M2=M3=0 FOR J1MIN.LE.J1.LE.J1MAX USING THE RECURSIVE METHOD OF
C  K. SCHULTEN AND R. G. GORDON, J. MATH. PHYS., VOL. 10, P. 1961,
C  (1975).  PROGRAMMED BY D. E. FITZ, 9/16/79.
      IMPLICIT DOUBLE PRECISION (A-H,J-M,O-Z)
      DIMENSION W3J(1)
C  EQN 6B (PART OF)
      A(J1)=SQRT((J1*J1-DJ23S)*(J23P1S-J1*J1))
C
      DATA ZERO /0.0D0/ ,ONE /1.0D0/, TWO /2.0D0/, HALF /0.5D0/,
     1     ONPO /1.1D0/, MZERO /1.0D-34/,TENTH /0.1D0/
C
      IF (MOD(INT(2.D0*J2+0.1D0),2).NE.0 .OR.
     1    MOD(INT(2.D0*J3+0.1D0),2).NE.0) THEN
        WRITE(6,*) ' *** YOU ARE ATTEMPTING TO CALCULATE AN ILLEGAL ',
     1             '3J SYMBOL USING J3J000'
        STOP
      ENDIF

      JJ2P1=J2*(J2+ONE)
      JJ3P1=J3*(J3+ONE)
      DJ23S=(J2-J3)**2
      J23P1S=(J2+J3+ONE)**2
      J1MIN=ABS(J2-J3)
      J1MAX=J2+J3
      SGNV=J2-J3
      SGN=ONE
      IF (SGNV.LT.ZERO) SGN=-ONE
      ISGN=INT(SGNV+SGN*TENTH)
      SGN=ONE
      IF (MOD(ISGN,2).NE.0) SGN=-ONE
      IVAL=INT(J1MAX-J1MIN+TENTH)/2+1
C
C  RIGHT RECURSION.  USE 6PRIME STARTING AT SMALLEST VALUE (B TERMS ARE
C                    ZERO BECAUSE 3J WITH M1=M2=M3=0 NON-ZERO ONLY FOR
C                    EVEN J1+J2+J3).
C
   20 NMID=IVAL/2+1
      W3J(1)=HALF
      IF (IVAL.EQ.1) GOTO 40
      J1=J1MIN
      DO 21 IM2=2,NMID
      J1=J1+TWO
   21 W3J(IM2)=-A(J1-ONE)*W3J(IM2-1)/A(J1)
      IF (IVAL.EQ.2) GOTO 40
      SCALE=W3J(NMID)
C
C  LEFT RECURSION. USE 6PRIME STARTING AT LARGEST VALUE (B TERMS ARE
C                  ZERO AGAIN).
C
   30 W3J(IVAL)=HALF
      J1=J1MAX
      IEND=IVAL-NMID
      DO 32 IM2=1,IEND
      W3J(IVAL-IM2)=-A(J1)*W3J(IVAL-IM2+1)/A(J1-ONE)
   32 J1=J1-TWO
C
C  MATCH LEFT AND RIGHT RECURSIVE RESULTS BY SCALING.
C
   31 SCALE=SCALE/W3J(NMID)
      DO 33 IM2=NMID,IVAL
   33 W3J(IM2)=SCALE*W3J(IM2)
C
C  NORMALIZE RESULTS AND SET PHASE.
C
   40 TOTAL=ZERO
      DO 41 IM2=1,IVAL
      J1=J1MIN+TWO*DBLE(IM2-1)
   41 TOTAL=TOTAL+(TWO*J1+ONE)*W3J(IM2)**2
      RNORM=ONE/SQRT(TOTAL)
      IF ((SGN*W3J(IVAL)).LT.ZERO) RNORM=-RNORM
      DO 42 IM2=1,IVAL
   42 W3J(IM2)=W3J(IM2)*RNORM
      RETURN
      END
